<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>graphviz on blog.oddbit.com</title><link>https://blog.oddbit.com/tag/graphviz/</link><description>Recent content in graphviz on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Sat, 27 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tag/graphviz/rss.xml" rel="self" type="application/rss+xml"/><item><title>Tools for writing about Git</title><link>https://blog.oddbit.com/post/2021-02-27-index.in/</link><pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2021-02-27-index.in/</guid><description>I sometimes find myself writing articles or documentation about git, so I put together a couple of terrible hacks for generating reproducible histories and pretty graphs of those histories.
git synth The git synth command reads a YAML description of a repository and executes the necessary commands to reproduce that history. It allows you set the name and email address of the author and committer as well as static date, so you every time you generate the repository you can identical commit ids.</description><content>&lt;p>I sometimes find myself writing articles or documentation about
&lt;a href="https://git-scm.org">git&lt;/a>, so I put together a couple of terrible hacks for generating
reproducible histories and pretty graphs of those histories.&lt;/p>
&lt;h2 id="git-synth">git synth&lt;/h2>
&lt;p>The &lt;a href="https://github.com/larsks/git-snippets/blob/master/git-synth">&lt;code>git synth&lt;/code>&lt;/a> command reads a &lt;a href="https://yaml.org/">YAML&lt;/a> description of a
repository and executes the necessary commands to reproduce that
history. It allows you set the name and email address of the author
and committer as well as static date, so you every time you generate
the repository you can identical commit ids.&lt;/p>
&lt;h2 id="git-dot">git dot&lt;/h2>
&lt;p>The &lt;a href="https://github.com/larsks/git-snippets/blob/master/git-dot">&lt;code>git dot&lt;/code>&lt;/a> command generates a representation of a repository
history in the &lt;a href="https://en.wikipedia.org/wiki/DOT_(graph_description_language)">dot&lt;/a> language, and uses &lt;a href="https://graphviz.org/">Graphviz&lt;/a> to render those
into diagrams.&lt;/p>
&lt;h2 id="putting-it-together">Putting it together&lt;/h2>
&lt;p>For example, the following history specification:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;!-- include examplerepo.yml --&amp;gt;
&lt;/code>&lt;/pre>&lt;p>When applied with &lt;code>git synth&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ git synth -r examplerepo examplerepo.yml
&lt;/code>&lt;/pre>&lt;p>Will generate the following repository:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ git -C examplerepo log --graph --all --decorate --oneline
* 28f7b38 (HEAD -&amp;gt; master) H
| * 93e1d18 (topic2) G
| * 3ef811d F
| * 973437c (topic1) E
| * 2c0bd1c D
|/
* cabdedf C
* a5cbd99 B
* d98f949 A
&lt;/code>&lt;/pre>&lt;p>We can run this &lt;code>git dot&lt;/code> command line:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ git -C examplerepo dot -m -g branch --rankdir=RL
&lt;/code>&lt;/pre>&lt;p>To produce the following &lt;code>dot&lt;/code> description of the history:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;!-- include examplerepo.dot --&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Running that through the &lt;code>dot&lt;/code> utility (&lt;code>dot -Tsvg -o repo.svg repo.dot&lt;/code>) results in the following diagram:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-graphviz" data-lang="graphviz">&amp;lt;!-- include examplerepo.dot --&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="where-are-these-wonders">Where are these wonders?&lt;/h2>
&lt;p>Both tools live in my &lt;a href="https://github.com/larsks/git-snippets">git-snippets&lt;/a> repository, which is a motley
collection of shells scripts, python programs, and other utilities for
interacting with &lt;code>git&lt;/code>.&lt;/p>
&lt;p>It&amp;rsquo;s all undocumented and uninstallable, but if there&amp;rsquo;s interest in
either of these tools I can probably find the time to polish them up a
bit.&lt;/p></content></item></channel></rss>