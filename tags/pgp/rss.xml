<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pgp on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/pgp/</link><description>Recent content in pgp on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Sun, 13 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/pgp/rss.xml" rel="self" type="application/rss+xml"/><item><title>Using KeyOxide</title><link>https://blog.oddbit.com/posts/using-keyoxide/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/posts/using-keyoxide/</guid><description>In today&amp;rsquo;s post, we look at KeyOxide, a service that allows you to cryptographically assert ownership of online resources using your GPG key. Some aspects of the service are less than obvious; in response to some questions I saw on Mastodon I though I would put together a short guide to making use of the service.
We&amp;rsquo;re going to look at the following high-level tasks:
Create a GPG key
Publish the GPG key</description><content>&lt;p>In today&amp;rsquo;s post, we look at &lt;a href="https://keyoxide.org/">KeyOxide&lt;/a>, a service that allows you to cryptographically assert ownership of online resources using your GPG key. Some aspects of the service are less than obvious; in response to some questions I saw on Mastodon I though I would put together a short guide to making use of the service.&lt;/p>
&lt;p>We&amp;rsquo;re going to look at the following high-level tasks:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="#step-1-create-a-gpg-keypair">Create a GPG key&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#step-2-publish-your-key">Publish the GPG key&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#step-3-add-a-claim">Use the GPG key to assert claims on online resources&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="step-1-create-a-gpg-keypair">Step 1: Create a GPG keypair&lt;/h2>
&lt;p>If you already have a keypair, skip on to &amp;ldquo;&lt;a href="#step-2-publish-your-key">Step 2: Publish your key&lt;/a>&amp;rdquo;.&lt;/p>
&lt;p>The first thing you need to do is set up a GPG&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> keypair and publish it to a keyserver (or a &lt;a href="https://wiki.gnupg.org/WKD">WKD endpoint&lt;/a>). There are many guides out there that step you through the process (for example, GitHub&amp;rsquo;s guide on &lt;a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key">Generating a new GPG key&lt;/a>), but if you&amp;rsquo;re in a hurry and not particularly picky, read on.&lt;/p>
&lt;p>This assumes that you&amp;rsquo;re using a recent version of GPG; at the time of this writing, the current GPG release is 2.3.8, but these instructions seem to work at least with version 2.2.27.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Generate a new keypair using the &lt;code>--quick-gen-key&lt;/code> option:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg --batch --quick-gen-key &amp;lt;your email address&amp;gt;
&lt;/code>&lt;/pre>&lt;p>This will use the GPG defaults for the key algorithm (varies by version) and expiration time (the key never expires&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When prompted, enter a secure passphrase.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>GPG will create a keypair for you; you can view it after the fact by running:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg -qk &amp;lt;your email address&amp;gt;
&lt;/code>&lt;/pre>&lt;p>You should see something like:&lt;/p>
&lt;pre tabindex="0">&lt;code>pub ed25519 2022-11-13 [SC] [expires: 2024-11-12]
EC03DFAC71DB3205EC19BAB1404E03D044EE706B
uid [ultimate] testuser@example.com
sub cv25519 2022-11-13 [E]
&lt;/code>&lt;/pre>&lt;p>In the above output, &lt;code>F79CE5D41D93C2C0E97F9A63C4178440F81E4261&lt;/code> is the &lt;em>key fingerprint&lt;/em>. We&amp;rsquo;re going to need this later.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Now you have created a GPG keypair!&lt;/p>
&lt;h2 id="step-2-publish-your-key">Step 2: Publish your key&lt;/h2>
&lt;p>If you&amp;rsquo;ve already published your key at &lt;a href="https://keys.openpgp.org/">https://keys.openpgp.org/&lt;/a> or at a &lt;a href="https://wiki.gnupg.org/WKD">WKD&lt;/a> endpoint, skip on to &amp;ldquo;&lt;a href="#step-3-add-a-claim">Step 3: Add a claim&lt;/a>&amp;rdquo;.&lt;/p>
&lt;p>In order for KeyOxide to find your GPG key, it needs to be published at a known location. There are two choices:&lt;/p>
&lt;ul>
&lt;li>Publishing your key at the public keyserver at &lt;a href="https://keys.openpgp.org/">https://keys.openpgp.org/&lt;/a>.&lt;/li>
&lt;li>Publishing your key using a &lt;a href="https://wiki.gnupg.org/WKD">WKD&lt;/a> service&lt;/li>
&lt;/ul>
&lt;p>In this post, we&amp;rsquo;re only going to consider the first option.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Export your public key to a file using gpg&amp;rsquo;s &lt;code>--export&lt;/code> option:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg --export -a &amp;lt;your email address&amp;gt; &amp;gt; mykey.asc
&lt;/code>&lt;/pre>&lt;p>This will create a file &lt;code>mykey.asc&lt;/code> in your current directory that looks like:&lt;/p>
&lt;pre tabindex="0">&lt;code>-----BEGIN PGP PUBLIC KEY BLOCK-----
[...a bunch of base64 encoded text...]
-----END PGP PUBLIC KEY BLOCK-----
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Go to &lt;a href="https://keys.openpgp.org/upload">https://keys.openpgp.org/upload&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Select the key export you just created, and select &amp;ldquo;upload&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When prompted on the next page, select &amp;ldquo;Send Verification Email&amp;rdquo;. Your key won&amp;rsquo;t discoverable until you have received and responded to the verification email.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you receive the email, select the verification link.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Now your key has been published! You can verify this by going to &lt;a href="https://keys.openpgp.org/">https://keys.openpgp.org/&lt;/a> and searching for your email address.&lt;/p>
&lt;h2 id="step-3-add-a-claim">Step 3: Add a claim&lt;/h2>
&lt;p>You assert ownership of an online resource through a three step process:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Mark the online resource with your GPG key fingerprint. How you do this depends on the type of resource you&amp;rsquo;re claiming; e.g., for GitHub you create a gist with specific content, while for claiming a DNS domain you create a &lt;code>TXT&lt;/code> record.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add a notation to your GPG key with a reference to the claim created in the previous step.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update your published key.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>In this post we&amp;rsquo;re going to look at two specific examples; for other services, see the &amp;ldquo;Service providers&amp;rdquo; section of the &lt;a href="https://docs.keyoxide.org/">KeyOxide documentation&lt;/a>.&lt;/p>
&lt;p>In order to follow any of the following instructions, you&amp;rsquo;re going to need to know your &lt;em>key fingerprint&lt;/em>. When you show your public key by running &lt;code>gpg -k&lt;/code>, you key fingerprint is the long hexadecimal string on the line following the line that starts with &lt;code>pub &lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ gpg -qk testuser@example.com
pub ed25519 2022-11-13 [SC] [expires: 2024-11-12]
EC03DFAC71DB3205EC19BAB1404E03D044EE706B &amp;lt;--- THIS LINE HERE
uid [ultimate] testuser@example.com
sub cv25519 2022-11-13 [E]
&lt;/code>&lt;/pre>&lt;h3 id="add-a-claim-to-your-gpg-key">Add a claim to your GPG key&lt;/h3>
&lt;p>This is a set of common instructions that we&amp;rsquo;ll use every time we need to add a claim to our GPG key.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Edit your GPG key using the &lt;code>--edit-key&lt;/code> option:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg --edit-key &amp;lt;your email address&amp;gt;
&lt;/code>&lt;/pre>&lt;p>This will drop you into the GPG interactive key editor.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Select a user id on which to operate using the &lt;code>uid&lt;/code> command. If you created your key following the instructions earlier in this post, then you only have a single user id:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg&amp;gt; uid 1
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Add an annotation to the key using the &lt;code>notation&lt;/code> command:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg&amp;gt; notation
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>When prompted, enter the notation (the format of the notation depends on the service you&amp;rsquo;re claiming; see below for details). For example, if we&amp;rsquo;re asserting a Mastodon identity at hachyderm.io, we would enter:&lt;/p>
&lt;pre tabindex="0">&lt;code>Enter the notation: proof@ariadne.id=https://hachyderm.io/@testuser
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Save your changes with the &lt;code>save&lt;/code> command:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg&amp;gt; save
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h3 id="update-your-published-key">Update your published key&lt;/h3>
&lt;p>After adding an annotation to your key locally, you need to publish those changes. One way of doing this is simply following the &lt;a href="#step-2-publish-your-key">instructions for initially uploading your public key&lt;/a>:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Export the key to a file:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg --export -a &amp;lt;your email address&amp;gt; &amp;gt; mykey.asc
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Upload your key to &lt;a href="https://keys.openpgp.org/upload">https://keys.openpgp.org/upload&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>You won&amp;rsquo;t have to re-verify your key.&lt;/p>
&lt;p>Alternately, you can configure gpg so that you can publish your key from the command line. Create or edit &lt;code>$HOME/.gnupg/gpg.conf&lt;/code> and add the following line:&lt;/p>
&lt;pre tabindex="0">&lt;code>keyserver hkps://keys.openpgp.org
&lt;/code>&lt;/pre>&lt;p>Now every time you need to update the published version of your key:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Upload your public key using the &lt;code>--send-keys&lt;/code> option along with your key fingerprint, e.g:&lt;/p>
&lt;pre tabindex="0">&lt;code>gpg --send-keys EC03DFAC71DB3205EC19BAB1404E03D044EE706B
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h3 id="claiming-a-mastodon-identity">Claiming a Mastodon identity&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>On your favorite Mastodon server, go to your profile and select &amp;ldquo;Edit profile&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Look for the &amp;ldquo;Profile metadata section&amp;rdquo;; this allows you to associate four bits of metadata with your Mastodon profile. Assuming that you still have a slot free, give it a name (it could be anything, I went with &amp;ldquo;Keyoxide claim&amp;rdquo;), and for the value enter:&lt;/p>
&lt;pre tabindex="0">&lt;code>openpgp4fpr:&amp;lt;your key fingerprint&amp;gt;
&lt;/code>&lt;/pre>&lt;p>E.g., given the &lt;code>gpg -k&lt;/code> output shown above, I would enter:&lt;/p>
&lt;pre tabindex="0">&lt;code>openpgp4fpr:EC03DFAC71DB3205EC19BAB1404E03D044EE706B
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Click &amp;ldquo;Save Changes&amp;rdquo;&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Now, &lt;a href="#add-a-claim-to-your-gpg-key">add the claim to your GPG key&lt;/a> by adding the notation &lt;code>proof@ariadne.id=https://&amp;lt;your mastodon server&amp;gt;/@&amp;lt;your mastodon username&lt;/code>. I am @larsks@hachyderm.io, so I would enter:&lt;/p>
&lt;pre tabindex="0">&lt;code>proof@ariadne.id=https://hachyderm.io/@larsks
&lt;/code>&lt;/pre>&lt;p>After adding the claim, &lt;a href="#update-your-published-key">update your published key&lt;/a>.&lt;/p>
&lt;h3 id="claiming-a-github-identity">Claiming a Github identity&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Create a &lt;a href="https://gist.github.com">new gist&lt;/a> (it can be either secret or public).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In your gist, name the filename &lt;code>openpgp.md&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Set the content of that file to:&lt;/p>
&lt;pre tabindex="0">&lt;code>openpgp4fpr:&amp;lt;your key fingerprint&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>Now, &lt;a href="#add-a-claim-to-your-gpg-key">add the claim to your GPG key&lt;/a> by adding the notation &lt;code>proof@ariadne.id=https://gist.github.com/larsks/&amp;lt;gist id&amp;gt;&lt;/code>. You can see my claim at &lt;a href="https://gist.github.com/larsks/9224f58cf82bdf95ef591a6703eb91c7">https://gist.github.com/larsks/9224f58cf82bdf95ef591a6703eb91c7&lt;/a>; the notation I added to my key is:&lt;/p>
&lt;pre tabindex="0">&lt;code>proof@ariadne.id=https://gist.github.com/larsks/9224f58cf82bdf95ef591a6703eb91c7
&lt;/code>&lt;/pre>&lt;p>After adding the claim, &lt;a href="#update-your-published-key">update your published key&lt;/a>.&lt;/p>
&lt;h2 id="step-4-view-your-claims">Step 4: View your claims&lt;/h2>
&lt;p>You&amp;rsquo;ll note that none of the previous steps required interacting with &lt;a href="https://keyoxide.org/">KeyOxide&lt;/a>. That&amp;rsquo;s because KeyOxide doesn&amp;rsquo;t actually store any of your data: it just provides a mechanism for visualizing and verifying claims.&lt;/p>
&lt;p>You can look up an identity by email address or by GPG key fingerprint.&lt;/p>
&lt;p>To look up an identity using an email address:&lt;/p>
&lt;ol>
&lt;li>Go to &lt;code>https://keyoxide.org/&amp;lt;email address&lt;/code>. For example, to find my identity, visit &lt;a href="https://keyoxide.org/lars@oddbit.com">https://keyoxide.org/lars@oddbit.com&lt;/a>.&lt;/li>
&lt;/ol>
&lt;p>To look up an identity by key fingerprint:&lt;/p>
&lt;ol>
&lt;li>Go to &lt;code>https://keyoxide.org/&amp;lt;fingerprint&amp;gt;&lt;/code>. For example, to find my identity, visit &lt;a href="https://keyoxide.org/3e70a502bb5255b6bb8e86be362d63a80853d4cf">https://keyoxide.org/3e70a502bb5255b6bb8e86be362d63a80853d4cf&lt;/a>.&lt;/li>
&lt;/ol>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The pedantic among you will already be writing to me about how PGP is the standard and GPG is an implementation of that standard, but I&amp;rsquo;m going to stick with this nomenclature for the sake of simplicity.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>For some thoughts on key expiration, see &lt;a href="https://security.stackexchange.com/questions/14718/does-openpgp-key-expiration-add-to-security">this question&lt;/a> on the Information Security StackExchange.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></content></item></channel></rss>