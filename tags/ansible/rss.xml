<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/ansible/</link><description>Recent content in Ansible on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/ansible/rss.xml" rel="self" type="application/rss+xml"/><item><title>Adding support for privilege escalation to Ansible's docker connection driver</title><link>https://blog.oddbit.com/post/2019-04-26-adding-support-for-privilege-e/</link><pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-04-26-adding-support-for-privilege-e/</guid><description>&lt;p&gt;&lt;strong&gt;Update 2019-05-09&lt;/strong&gt; Pull request 
&lt;a href="https://github.com/ansible/ansible/pull/55816" class="pull-request"&gt;#55816&lt;/a&gt;
 has merged, so you can now use &lt;code&gt;sudo&lt;/code&gt; with the &lt;code&gt;docker&lt;/code&gt; connection driver even when &lt;code&gt;sudo&lt;/code&gt; is configured to require a password.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I often use Docker to test out Ansible playbooks. While normally that works great, I recently ran into an unexpected problem with privilege escalation. Given a simple playbook like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
- hosts: all
 gather_facts: false
 become: true
 tasks:
 - ping:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And an inventory like this:&lt;/p&gt;</description></item><item><title>Writing Ansible filter plugins</title><link>https://blog.oddbit.com/post/2019-04-25-writing-ansible-filter-plugins/</link><pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-04-25-writing-ansible-filter-plugins/</guid><description>&lt;p&gt;I often see questions from people who are attemping to perform complex text transformations in their &lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt; playbooks. While I am a huge fan of Ansible, data transformation is not one of its strong points. For example, this past week someone &lt;a href="https://stackoverflow.com/questions/55853384/ansible-build-list-dictionary-with-from-list-of-strings/55854394"&gt;asked a question&lt;/a&gt; on Stack Overflow in which they were attempting to convert the output of the &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html"&gt;keytool&lt;/a&gt; command into a list of dictionaries. The output of the &lt;code&gt;keytool -list -v&lt;/code&gt; command looks something like this:&lt;/p&gt;</description></item><item><title>Integrating Bitwarden with Ansible</title><link>https://blog.oddbit.com/post/2018-10-19-integrating-bitwarden-with-ans/</link><pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2018-10-19-integrating-bitwarden-with-ans/</guid><description>&lt;p&gt;&lt;a href="https://bitwarden.com"&gt;Bitwarden&lt;/a&gt; is a password management service (like &lt;a href="https://www.lastpass.com/"&gt;LastPass&lt;/a&gt; or
&lt;a href="https://1password.com/"&gt;1Password&lt;/a&gt;). It&amp;rsquo;s unique in that it is built entirely on open
source software. In addition to the the web UI and mobile apps that
you would expect, Bitwarden also provides a &lt;a href="https://help.bitwarden.com/article/cli/"&gt;command-line tool&lt;/a&gt; for
interacting with the your password store.&lt;/p&gt;
&lt;p&gt;At $WORK(-ish) we&amp;rsquo;re looking into Bitwarden because we want a password
sharing and management solution that was better than dropping files
into directories on remote hosts or sharing things over Slack. At
the same time, we are also thinking about bringing more automation to
our operational environment, possibly by making more extensive use of
&lt;a href="https://ansible.com"&gt;Ansible&lt;/a&gt;. It looked like all the pieces were available to use
Bitwarden as a credential storage mechanism for Ansible playbooks, so
I set out to write a lookup plugin to implement the integration&amp;hellip;&lt;/p&gt;</description></item><item><title>Safely restarting an OpenStack server with Ansible</title><link>https://blog.oddbit.com/post/2018-01-24-safely-restarting-an-openstack/</link><pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2018-01-24-safely-restarting-an-openstack/</guid><description>&lt;p&gt;The other day on &lt;a href="http://docs.ansible.com/ansible/latest/community.html#irc-channel"&gt;#ansible&lt;/a&gt;, someone was looking for a way to safely
shut down a Nova server, wait for it to stop, and then start it up
again using the &lt;code&gt;openstack&lt;/code&gt; cli. The first part seemed easy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- hosts: myserver
 tasks:
 - name: shut down the server
 command: poweroff
 become: true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;hellip;but that will actually fail with the following result:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TASK [shut down server] *************************************
fatal: [myserver]: UNREACHABLE! =&amp;gt; {&amp;quot;changed&amp;quot;: false, &amp;quot;msg&amp;quot;:
&amp;quot;Failed to connect to the host via ssh: Shared connection to
10.0.0.103 closed.\r\n&amp;quot;, &amp;quot;unreachable&amp;quot;: true}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This happens because running &lt;code&gt;poweroff&lt;/code&gt; immediately closes Ansible&amp;rsquo;s
ssh connection. The workaround here is to use a &amp;ldquo;fire-and-forget&amp;rdquo;
&lt;a href="http://docs.ansible.com/ansible/latest/playbooks_async.html"&gt;asynchronous task&lt;/a&gt;:&lt;/p&gt;</description></item><item><title>Ansible for Infrastructure Testing</title><link>https://blog.oddbit.com/post/2017-08-02-ansible-for-infrastructure-tes/</link><pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2017-08-02-ansible-for-infrastructure-tes/</guid><description>&lt;p&gt;At &lt;code&gt;$JOB&lt;/code&gt; we often find ourselves at customer sites where we see the
same set of basic problems that we have previously encountered
elsewhere (&amp;ldquo;your clocks aren&amp;rsquo;t in sync&amp;rdquo; or &amp;ldquo;your filesystem is full&amp;rdquo;
or &amp;ldquo;you haven&amp;rsquo;t installed a critical update&amp;rdquo;, etc). We would like a
simple tool that could be run either by the customer or by our own
engineers to test for and report on these common issues.
Fundamentally, we want something that acts like a typical code test
suite, but for infrastructure.&lt;/p&gt;</description></item><item><title>Deploying an HA OpenStack development environment with tripleo-quickstart</title><link>https://blog.oddbit.com/post/2016-02-19-deploy-an-ha-openstack-develop/</link><pubDate>Fri, 19 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2016-02-19-deploy-an-ha-openstack-develop/</guid><description>&lt;p&gt;In this article I would like to introduce &lt;a href="https://github.com/redhat-openstack/tripleo-quickstart"&gt;tripleo-quickstart&lt;/a&gt;, a
tool that will automatically provision a virtual environment and then
use &lt;a href="http://docs.openstack.org/developer/tripleo-docs/"&gt;TripleO&lt;/a&gt; to deploy an HA OpenStack on top of it.&lt;/p&gt;
&lt;h2 id="introducing-tripleo-quickstart"&gt;Introducing Tripleo-Quickstart&lt;/h2&gt;
&lt;p&gt;The goal of the &lt;a href="https://github.com/redhat-openstack/tripleo-quickstart"&gt;Tripleo-Quickstart&lt;/a&gt; project is to replace the
&lt;code&gt;instack-virt-setup&lt;/code&gt; tool for quickly setting up virtual TripleO
environments, and to ultimately become the tool used by both
developers and upstream CI for this purpose. The project is a set of
&lt;a href="http://ansible.com/"&gt;Ansible&lt;/a&gt; playbooks that will take care of:&lt;/p&gt;</description></item><item><title>A systemd-nspawn connection driver for Ansible</title><link>https://blog.oddbit.com/post/2016-02-08-a-systemd-nspawn-connection-dr/</link><pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2016-02-08-a-systemd-nspawn-connection-dr/</guid><description>&lt;p&gt;I wrote &lt;a href="https://blog.oddbit.com/post/2016-02-07-systemd-nspawn-for-fun-and-wel/"&gt;earlier&lt;/a&gt; about &lt;a href="https://www.freedesktop.org/software/systemd/man/systemd-nspawn.html"&gt;systemd-nspawn&lt;/a&gt;, and how it can take much
of the fiddly work out of setting up functional &lt;code&gt;chroot&lt;/code&gt; environments.
I&amp;rsquo;m a regular &lt;a href="http://ansible.com/"&gt;Ansible&lt;/a&gt; user, and I wanted to be able to apply some
of those techniques to my playbooks.&lt;/p&gt;
&lt;p&gt;Ansible already has a &lt;code&gt;chroot&lt;/code&gt; module, of course, but for some
situations &amp;ndash; such as targeting an emulated &lt;code&gt;chroot&lt;/code&gt; environment &amp;ndash;
that just means a lot of extra work. Using &lt;code&gt;systemd-nspawn&lt;/code&gt; makes
this trivial.&lt;/p&gt;</description></item><item><title>Folding long lines in Ansible inventory files</title><link>https://blog.oddbit.com/post/2016-02-07-folding-long-lines-in-ansible-/</link><pubDate>Sun, 07 Feb 2016 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2016-02-07-folding-long-lines-in-ansible-/</guid><description>&lt;p&gt;If you have an Ansible inventory file that includes lots of per host
variables, it&amp;rsquo;s not unusual for lines to get long enough that they
become unwieldly, particularly if you want to discuss them in an email
or write about them in some context (e.g., a blog post).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve just submitted pull request &lt;a href="https://github.com/ansible/ansible/pull/14359"&gt;#14359&lt;/a&gt; to Ansible which
implements support for folding long lines using the INI-format
convention of using indent to mark extended logical lines.&lt;/p&gt;</description></item><item><title>Ansible 2.0: New OpenStack modules</title><link>https://blog.oddbit.com/post/2015-10-26-ansible-20-new-openstack-modul/</link><pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-10-26-ansible-20-new-openstack-modul/</guid><description>&lt;p&gt;This is the second in a loose sequence of articles looking at new
features in Ansible 2.0. In the previous article I looked at the
&lt;a href="https://blog.oddbit.com/post/2015-10-13-ansible-20-the-docker-connecti/"&gt;Docker connection driver&lt;/a&gt;. In this article, I would like to
provide an overview of the new-and-much-improved suite of modules for
interacting with an &lt;a href="http://www.openstack.org/"&gt;OpenStack&lt;/a&gt; environment, and provide a few
examples of their use.&lt;/p&gt;
&lt;p&gt;In versions of Ansible prior to 2.0, there was a small collection of
OpenStack modules. There was the minimum necessary to boot a Nova
instance:&lt;/p&gt;</description></item><item><title>Stupid Ansible Tricks: Running a role from the command line</title><link>https://blog.oddbit.com/post/2015-10-19-stupid-ansible-tricks-running-/</link><pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-10-19-stupid-ansible-tricks-running-/</guid><description>&lt;p&gt;When writing &lt;a href="http://www.ansible.com/"&gt;Ansible&lt;/a&gt; roles I occasionally want a way to just run a
role from the command line, without having to muck about with a
playbook. I&amp;rsquo;ve seen &lt;a href="https://groups.google.com/forum/#!topic/ansible-project/h-SGLuPDRrs"&gt;similar&lt;/a&gt; &lt;a href="https://groups.google.com/forum/#!topic/ansible-devel/GqzZ6zsn6eY"&gt;requests&lt;/a&gt; on the mailing lists
and on irc.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve thrown together a quick wrapper that will allow you (and me!) to
do exactly that, called &lt;a href="http://github.com/larsks/ansible-role"&gt;ansible-role&lt;/a&gt;. The &lt;code&gt;--help&lt;/code&gt; output looks
like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;usage: ansible-role [-h] [--verbose] [--gather] [--no-gather]
 [--extra-vars EXTRA_VARS] [-i INVENTORY] [--hosts HOSTS]
 [--sudo] [--become] [--user USER]
 role

positional arguments:
 role

optional arguments:
 -h, --help show this help message and exit
 --verbose, -v
 --gather, -g
 --no-gather, -G
 --extra-vars EXTRA_VARS, -e EXTRA_VARS

Inventory:
 -i INVENTORY, --inventory INVENTORY
 --hosts HOSTS, -H HOSTS

Identity:
 --sudo, -s
 --become, -b
 --user USER, -u USER
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;If you have a role &lt;code&gt;roles/testrole&lt;/code&gt; that contains the following in
&lt;code&gt;tasks/main.yml&lt;/code&gt;:&lt;/p&gt;</description></item><item><title>Bootstrapping Ansible on Fedora 23</title><link>https://blog.oddbit.com/post/2015-10-15-bootstrapping-ansible-on-fedor/</link><pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-10-15-bootstrapping-ansible-on-fedor/</guid><description>&lt;p&gt;If you&amp;rsquo;ve tried running &lt;a href="http://ansible.com/"&gt;Ansible&lt;/a&gt; against a &lt;a href="http://fedoraproject.org/"&gt;Fedora&lt;/a&gt; 23 system,
you may have run into the following problem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fatal: [myserver]: FAILED! =&amp;gt; {&amp;quot;changed&amp;quot;: false, &amp;quot;failed&amp;quot;: true,
&amp;quot;msg&amp;quot;: &amp;quot;/bin/sh: /usr/bin/python: No such file or directory\r\n&amp;quot;,
&amp;quot;parsed&amp;quot;: false}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fedora has recently made the switch to only including Python 3 on the
base system (at least for the &lt;a href="https://getfedora.org/en/cloud/prerelease/"&gt;cloud&lt;/a&gt; variant), while Ansible still
requires Python 2. With Fedora 23, Python 3 is available as
&lt;code&gt;/usr/bin/python3&lt;/code&gt;, and &lt;code&gt;/usr/bin/python&lt;/code&gt; is only available if you
have installed the Python 2 interpreter.&lt;/p&gt;</description></item><item><title>Ansible 2.0: The Docker connection driver</title><link>https://blog.oddbit.com/post/2015-10-13-ansible-20-the-docker-connecti/</link><pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-10-13-ansible-20-the-docker-connecti/</guid><description>&lt;p&gt;As the release of &lt;a href="http://ansible.com/"&gt;Ansible&lt;/a&gt; 2.0 draws closer, I&amp;rsquo;d like to take a
look at some of the new features that are coming down the pipe. In
this post, we&amp;rsquo;ll look at the &lt;code&gt;docker&lt;/code&gt; connection driver.&lt;/p&gt;
&lt;p&gt;A &amp;ldquo;connection driver&amp;rdquo; is the mechanism by which Ansible connects to
your target hosts. These days it uses &lt;code&gt;ssh&lt;/code&gt; by default (which relies
on the OpenSSH command line client for connectivity), and it also
offers the &lt;a href="http://www.paramiko.org/"&gt;Paramiko&lt;/a&gt; library as an alternative ssh implementation
(this was in fact the default driver in earlier versions of Ansible).
Alternative drivers offered by recent versions of ansible included the
&lt;code&gt;winrm&lt;/code&gt; driver, for accessing Windows hosts, the &lt;code&gt;fireball&lt;/code&gt; driver, a
(deprecated) driver that used &lt;a href="http://zeromq.org/"&gt;0mq&lt;/a&gt; for communication, and &lt;code&gt;jail&lt;/code&gt;, a
driver for connecting to FreeBSD jails.&lt;/p&gt;</description></item></channel></rss>