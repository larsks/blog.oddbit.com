<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stackexchange on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/stackexchange/</link><description>Recent content in Stackexchange on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Sat, 18 Feb 2023 17:08:43 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/stackexchange/rss.xml" rel="self" type="application/rss+xml"/><item><title>NAT between identical networks using VRF</title><link>https://blog.oddbit.com/post/2023-02-19-vrf-and-nat/</link><pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2023-02-19-vrf-and-nat/</guid><description>&lt;p&gt;Last week, Oskar Stenberg asked on &lt;a href="https://unix.stackexchange.com/q/735931/4989"&gt;Unix &amp;amp; Linux&lt;/a&gt; if it were possible to configure connectivity between two networks, both using the same address range, without involving network namespaces. That is, given this high level view of the network&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://excalidraw.com/#json=uuXRRZ2ybaAXiUvbQVkNO,krx3lsbf12c-tDhuWtRjbg"&gt;&lt;img src="https://blog.oddbit.com/post/2023-02-19-vrf-and-nat/the-problem.svg" alt="two networks with the same address range connected by a host named “middleman”"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;hellip;can we set things up so that hosts on the &amp;ldquo;inner&amp;rdquo; network can communicate with hosts on the &amp;ldquo;outer&amp;rdquo; network using the range &lt;code&gt;192.168.3.0/24&lt;/code&gt;, and similarly for communication in the other direction?&lt;/p&gt;</description></item><item><title>A pair of userscripts for cleaning up Stack Exchange sites</title><link>https://blog.oddbit.com/post/2021-09-05-sx-question-filters/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2021-09-05-sx-question-filters/</guid><description>&lt;p&gt;I&amp;rsquo;ve been a regular visitor to &lt;a href="https://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt; and other &lt;a href="https://stackexchange.com"&gt;Stack
Exchange&lt;/a&gt; sites over the years, and while I&amp;rsquo;ve mostly enjoyed the
experience, I&amp;rsquo;ve been frustrated by the lack of control I have over
what questions I see. I&amp;rsquo;m not really interested in looking at
questions that have already been closed, or that have a negative
score, but there&amp;rsquo;s no native facility for filtering questions like
this.&lt;/p&gt;
&lt;p&gt;I finally spent the time learning just enough JavaScript ~~~to hurt
myself~~~ to put together a pair of scripts that let me present the
questions that way I want:&lt;/p&gt;</description></item><item><title>Unpacking a Python regular expression</title><link>https://blog.oddbit.com/post/2019-05-07-unpacking-a-python-regular-exp/</link><pubDate>Tue, 07 May 2019 10:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-05-07-unpacking-a-python-regular-exp/</guid><description>&lt;p&gt;I recently answered &lt;a href="https://stackoverflow.com/q/55965819/147356"&gt;a question&lt;/a&gt; from &lt;a href="https://stackoverflow.com/users/7738974/harsha-nalore"&gt;Harsha Nalore&lt;/a&gt; on &lt;a href="https://stackoverflow.com/"&gt;StackOverflow&lt;/a&gt; that involved using Ansible to extract the output of a command sent to a BigIP device of some sort. My solution &amp;ndash; which I claim to be functional, but probably not optimal &amp;ndash; involved writing an &lt;a href="https://ansible.com/"&gt;Ansible&lt;/a&gt; filter module to parse the output. That filter made use of a complex-looking regular expression. Harsha asked for some details on that regular expression works, and the existing StackOverflow answer didn&amp;rsquo;t really seem the write place for that: so, here we are.&lt;/p&gt;</description></item></channel></rss>