<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arduino on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/arduino/</link><description>Recent content in Arduino on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/arduino/rss.xml" rel="self" type="application/rss+xml"/><item><title>Grove Beginner Kit for Arduino (part 2): First look</title><link>https://blog.oddbit.com/post/2020-06-07-first-look-seed-grove-beginner/</link><pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2020-06-07-first-look-seed-grove-beginner/</guid><description>&lt;p&gt;The folks at &lt;a href="https://seeedstudio.com"&gt;Seeed Studio&lt;/a&gt; were kind enough to send me a &lt;a href="https://www.seeedstudio.com/Grove-Beginner-Kit-for-Arduino-p-4549.html"&gt;Grove
Beginner Kit for Arduino&lt;/a&gt; for review. That&amp;rsquo;s a mouthful of a name
for a compact little kit!&lt;/p&gt;
&lt;p&gt;The Grove Beginner Kit for Arduino (henceforth &amp;ldquo;the Kit&amp;rdquo;, because ain&amp;rsquo;t
nobody got time to type that out more than a few times in a single
article) is about 8.5 x 5 x 1 inches. Closed, you could fit two of
them on a piece of 8.5x11 paper with a little room leftover.&lt;/p&gt;</description></item><item><title>Grove Beginner Kit for Arduino (part 1)</title><link>https://blog.oddbit.com/post/2020-04-15-grove-beginner-kit-for-arduino/</link><pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2020-04-15-grove-beginner-kit-for-arduino/</guid><description>&lt;p&gt;The folks at &lt;a href="https://www.seeedstudio.com/"&gt;Seeed Studio&lt;/a&gt; have just released the &lt;a href="https://www.seeedstudio.com/Grove-Beginner-Kit-for-Arduino-p-4549.html"&gt;Grove Beginner Kit for
Arduino&lt;/a&gt;, and they asked if I would be willing to take a look at it in
exchange for a free kit. At first glance it reminds me of the Radio Shack
(remember when they were cool?) electronics kit I had when I was a kid &amp;ndash; but
somewhat more advanced. I&amp;rsquo;m excited to take a closer look, but given shipping
these days means it&amp;rsquo;s probably a month away at least.&lt;/p&gt;</description></item><item><title>I see you have the machine that goes ping...</title><link>https://blog.oddbit.com/post/2020-03-20-i-see-you-have-the-machine-tha/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2020-03-20-i-see-you-have-the-machine-tha/</guid><description>&lt;p&gt;We&amp;rsquo;re all looking for ways to keep ourselves occupied these days, and
for me that means leaping at the chance to turn a small problem into a
slightly ridiculous electronics project. For reasons that I won&amp;rsquo;t go
into here I wanted to generate an alert when a certain WiFi BSSID
becomes visible. A simple solution to this problem would have been a
few lines of shell script to send me an email&amp;hellip;but this article isn&amp;rsquo;t
about simple solutions!&lt;/p&gt;</description></item><item><title>PiPower: A Raspberry Pi UPS</title><link>https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/</guid><description>&lt;figure&gt;&lt;a href="pipower-top.jpg"&gt;&lt;img src="https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/pipower-top.jpg" width="400"&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I have a Raspberry Pi running &lt;a href="https://retropie.org.uk/"&gt;RetroPie&lt;/a&gt; hooked up to a television. It&amp;rsquo;s powered from a USB port on the TV, which is convenient, but it means that whenever we shut off the TV we&amp;rsquo;re pulling the plug on the Pi. While there haven&amp;rsquo;t been any problems so far, this is a classic recipe for filesystem problems or data loss at some point. I started looking into UPS options to alleviate this issue. I wanted something with the following features:&lt;/p&gt;</description></item><item><title>I2C on the Raspberry Pi</title><link>https://blog.oddbit.com/post/2013-03-12-i2c-on-the-raspberry/</link><pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2013-03-12-i2c-on-the-raspberry/</guid><description>&lt;p&gt;I&amp;rsquo;ve set up my &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; to communicate with my &lt;a href="http://www.arduino.cc/"&gt;Arduino&lt;/a&gt; via
&lt;a href="http://en.wikipedia.org/wiki/I%C2%B2C"&gt;I2C&lt;/a&gt;. The Raspberry Pi is a 3.3v device and the Arduino is a 5v
device. While in general this means that you need to use a level
converter when connecting the two devices, &lt;strong&gt;you don&amp;rsquo;t need to use a
level converter when connecting the Arduino to the Raspberry Pi via
I2C.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The design of the I2C bus is such that the only device driving a
voltage on the bus is the master (in this case, the Raspberry Pi), via
pull-up resistors. So when &amp;ldquo;idle&amp;rdquo;, the bus is pulled to 3.3v volts by
the Pi, which is perfectly safe for the Arduino (and compatible with
it&amp;rsquo;s 5v signaling). To transmit data on the bus, a device brings the
bus low by connecting it to ground. In other words, slave devices
&lt;em&gt;never&lt;/em&gt; drive the bus high. This means that the Raspberry Pi will
never see a 5v signal from the Arduino&amp;hellip;unless, of course, you make a
mistake and accidentally &lt;code&gt;digitalWrite&lt;/code&gt; a &lt;code&gt;HIGH&lt;/code&gt; value on one of the
Arduino&amp;rsquo;s &lt;code&gt;I2C&lt;/code&gt; pins. So don&amp;rsquo;t do that.&lt;/p&gt;</description></item><item><title>Controlling a servo with your Arduino</title><link>https://blog.oddbit.com/post/2013-03-07-controlling-a-servo/</link><pubDate>Thu, 07 Mar 2013 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2013-03-07-controlling-a-servo/</guid><description>&lt;p&gt;I&amp;rsquo;ve recently started playing with an &lt;a href="http://arduino.cc/"&gt;Arduino&lt;/a&gt; kit I purchased a year
ago (and only just now got around to unboxing). I purchased the kit
from &lt;a href="https://www.sparkfun.com/"&gt;SparkFun&lt;/a&gt;, and it includes a motley collection of resistors,
LEDs, a motor, a servo, and more.&lt;/p&gt;
&lt;p&gt;I was fiddling around with &lt;a href="http://oomlout.com/a/products/ardx/circ-04/"&gt;this exercise&lt;/a&gt;, which uses the
&lt;code&gt;SoftwareServo&lt;/code&gt; library to control a servo. Using this library,
you just pass it an angle and the library takes care of everything
else, e.g. to rotate to 90 degrees you would do this:&lt;/p&gt;</description></item></channel></rss>