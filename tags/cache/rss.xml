<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cache on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/cache/</link><description>Recent content in Cache on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Sat, 16 Aug 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/cache/rss.xml" rel="self" type="application/rss+xml"/><item><title>lvcache: a tool for managing LVM caches</title><link>https://blog.oddbit.com/post/2014-08-16-lvcache-a-tool-for-managing-lv/</link><pubDate>Sat, 16 Aug 2014 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2014-08-16-lvcache-a-tool-for-managing-lv/</guid><description>&lt;p>Until recently I had a &lt;a href="http://bcache.evilpiepirate.org/">bcache&lt;/a> based setup on my laptop, but when
forced by circumstance to reinstall everything I spent some time
looking for alternatives that were less disruptive to configure on an
existing system.&lt;/p>
&lt;p>I came across &lt;a href="http://rwmj.wordpress.com/2014/05/22/using-lvms-new-cache-feature/">Richard Jones&amp;rsquo; article&lt;/a> discussing the recent work to
integrate &lt;a href="https://en.wikipedia.org/wiki/Dm-cache">dm-cache&lt;/a> into &lt;a href="http://en.wikipedia.org/wiki/Logical_Volume_Manager_(Linux)">LVM&lt;/a>. Unlike &lt;em>bcache&lt;/em> and unlike using
&lt;em>dm-cache&lt;/em> directly, the integration with LVM makes it easy to
associate devices with an existing logical volume.&lt;/p></description><content>&lt;p>Until recently I had a &lt;a href="http://bcache.evilpiepirate.org/">bcache&lt;/a> based setup on my laptop, but when
forced by circumstance to reinstall everything I spent some time
looking for alternatives that were less disruptive to configure on an
existing system.&lt;/p>
&lt;p>I came across &lt;a href="http://rwmj.wordpress.com/2014/05/22/using-lvms-new-cache-feature/">Richard Jones&amp;rsquo; article&lt;/a> discussing the recent work to
integrate &lt;a href="https://en.wikipedia.org/wiki/Dm-cache">dm-cache&lt;/a> into &lt;a href="http://en.wikipedia.org/wiki/Logical_Volume_Manager_(Linux)">LVM&lt;/a>. Unlike &lt;em>bcache&lt;/em> and unlike using
&lt;em>dm-cache&lt;/em> directly, the integration with LVM makes it easy to
associate devices with an existing logical volume.&lt;/p>
&lt;p>I have put together a small tool called &lt;a href="https://github.com/larsks/lvcache">lvcache&lt;/a> that simplies the
process of:&lt;/p>
&lt;ul>
&lt;li>Creating and attaching cache volumes&lt;/li>
&lt;li>Detaching and removing cache volumes&lt;/li>
&lt;li>Getting cache statistics for logical volumes&lt;/li>
&lt;li>Listing the cache status of all logical volumes&lt;/li>
&lt;/ul>
&lt;p>With &lt;code>lvcache&lt;/code> installed, you can run (as root) the following command
to create a new cache volume that is 20% the size of your origin
volume and attach it to the specified origin volume:&lt;/p>
&lt;pre>&lt;code># lvcache create myvg/home
&lt;/code>&lt;/pre>
&lt;p>You can control the size of the cache LV relative to the origin
volume. To create a cache LV that is 40% the size of the origin
volume:&lt;/p>
&lt;pre>&lt;code># lvcache create -% 40 myvg/home
&lt;/code>&lt;/pre>
&lt;p>You can query &lt;code>dm-setup&lt;/code> for cache statistics with the &lt;code>status&lt;/code>
command (the &lt;code>-H&lt;/code> translates raw bytes counts into human readable
numbers with SI suffixes):&lt;/p>
&lt;pre>&lt;code># lvcache status -H myvg/home
+-----------------------+------------------+
| Field | Value |
+-----------------------+------------------+
| cached | True |
| size | 32G |
| cache_lv | home_cache |
| cache_lv_size | 6G |
| metadata_lv | home_cache_cmeta |
| metadata_lv_size | 8M |
| cache_block_size | 128 |
| cache_utilization | 0/98304 |
| cache_utilization_pct | 0.0 |
| demotions | 0 |
| dirty | 0 |
| end | 62914560 |
| features | 1 |
| md_block_size | 8 |
| md_utilization | 200/2048 |
| md_utilization_pct | 9.765625 |
| promotions | 0 |
| read_hits | 0 |
| read_misses | 0 |
| segment_type | cache |
| start | 0 |
| write_hits | 0 |
| write_misses | 0 |
+-----------------------+------------------+
&lt;/code>&lt;/pre>
&lt;p>Because &lt;code>lvcache&lt;/code> is using the &lt;a href="http://cliff.readthedocs.org/en/latest/">cliff&lt;/a> framework, it is very easy to
extract individual values from this list for graphing or monitoring
purposes:&lt;/p>
&lt;pre>&lt;code># lvcache status tank.home -f value -c md_utilization_pct
9.765625
&lt;/code>&lt;/pre>
&lt;p>Or:&lt;/p>
&lt;pre>&lt;code># lvcache status tank.home -f shell
cached=&amp;quot;True&amp;quot;
size=&amp;quot;32G&amp;quot;
cache_lv=&amp;quot;nova_cache&amp;quot;
cache_lv_size=&amp;quot;6G&amp;quot;
metadata_lv=&amp;quot;nova_cache_cmeta&amp;quot;
metadata_lv_size=&amp;quot;8M&amp;quot;
cache_block_size=&amp;quot;128&amp;quot;
cache_utilization=&amp;quot;0/98304&amp;quot;
cache_utilization_pct=&amp;quot;0.0&amp;quot;
demotions=&amp;quot;0&amp;quot;
dirty=&amp;quot;0&amp;quot;
end=&amp;quot;62914560&amp;quot;
features=&amp;quot;1&amp;quot;
md_block_size=&amp;quot;8&amp;quot;
md_utilization=&amp;quot;200/2048&amp;quot;
md_utilization_pct=&amp;quot;9.765625&amp;quot;
promotions=&amp;quot;0&amp;quot;
read_hits=&amp;quot;0&amp;quot;
read_misses=&amp;quot;0&amp;quot;
segment_type=&amp;quot;cache&amp;quot;
start=&amp;quot;0&amp;quot;
write_hits=&amp;quot;0&amp;quot;
write_misses=&amp;quot;0&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>This is a very rough tool right now, but it seems to get the job done
on my system. If you do find this useful, let me know!&lt;/p></content></item></channel></rss>