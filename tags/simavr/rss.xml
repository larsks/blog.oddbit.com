<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simavr on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/simavr/</link><description>Recent content in Simavr on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/simavr/rss.xml" rel="self" type="application/rss+xml"/><item><title>Debugging attiny85 code, part 1: simavr and gdb</title><link>https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-1/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-1/</guid><description>&lt;p&gt;In a case of awful timing, after my &lt;a href="https://blog.oddbit.com/2019/01/19/pipower-a-raspberry-pi-ups/"&gt;recent project involving some attiny85 programming&lt;/a&gt; I finally got around to learning how to use &lt;a href="https://github.com/buserror/simavr"&gt;simavr&lt;/a&gt; and &lt;code&gt;gdb&lt;/code&gt; to help debug my AVR code. It was too late for me (and I will never get the time back that I spent debugging things with an LED and lots of re-flashing), but maybe this will help someone else!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve split this into three posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-1/"&gt;Part 1: Using GDB&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Debugging attiny85 code, part 2: Automating GDB with scripts</title><link>https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-2/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-2/</guid><description>&lt;p&gt;This is the second of three posts about using &lt;code&gt;gdb&lt;/code&gt; and &lt;code&gt;simavr&lt;/code&gt; to debug AVR code. The complete series is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-1/"&gt;Part 1: Using GDB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A walkthrough of using GDB to manually inspect the behavior of our code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-2/"&gt;Part 2: Automating GDB with scripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Creating GDB scripts to automatically test the behavior of our code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-3/"&gt;Part 3: Tracing with simavr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;simavr&lt;/code&gt; to collect information about the state of microcontroller pins while our code is running.&lt;/p&gt;</description></item><item><title>Debugging attiny85 code, part 3: Tracing with simavr</title><link>https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-3/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-3/</guid><description>&lt;figure&gt;&lt;a href="pipower_trace.png"&gt;&lt;img src="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-3/pipower_trace.png" width="800"&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;This is the third of three posts about using &lt;code&gt;gdb&lt;/code&gt; and &lt;code&gt;simavr&lt;/code&gt; to debug AVR code. The complete series is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-1/"&gt;Part 1: Using GDB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A walkthrough of using GDB to manually inspect the behavior of our code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-2/"&gt;Part 2: Automating GDB with scripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Creating GDB scripts to automatically test the behavior of our code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2019-01-22-debugging-attiny-code-pt-3/"&gt;Part 3: Tracing with simavr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;simavr&lt;/code&gt; to collect information about the state of microcontroller pins while our code is running.&lt;/p&gt;</description></item></channel></rss>