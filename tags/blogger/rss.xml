<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blogger on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/blogger/</link><description>Recent content in blogger on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Wed, 10 Feb 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/blogger/rss.xml" rel="self" type="application/rss+xml"/><item><title>Filtering Blogger feeds</title><link>https://blog.oddbit.com/posts/filtering-blogger-feeds/</link><pubDate>Wed, 10 Feb 2010 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/posts/filtering-blogger-feeds/</guid><description>After encountering a number of problems trying to filter Blogger feeds by tag (using services like Feedrinse and Yahoo Pipes), I&amp;rsquo;ve finally put together a solution that works:
Shadow the feed with Feedburner. Enable the Convert Format Burner, and convert your feed to RSS 2.0. Use Yahoo Pipes to filter the feed (because Feedrinse seems to be broken). This let me create a feed that excluded all my posts containing the fbpost tag, thus allowing me to avoid yet another postgasm in Facebook when adding new import URL to notes.</description><content>&lt;p>After encountering a number of problems trying to filter Blogger feeds by tag (using services like &lt;a href="http://feedrinse.com/">Feedrinse&lt;/a> and Yahoo &lt;a href="http://pipes.yahoo.com/">Pipes&lt;/a>), I&amp;rsquo;ve finally put together a solution that works:&lt;/p>
&lt;ul>
&lt;li>Shadow the feed with &lt;a href="http://feedburner.com/">Feedburner&lt;/a>.&lt;/li>
&lt;li>Enable the &lt;em>Convert Format Burner&lt;/em>, and convert your feed to RSS 2.0.&lt;/li>
&lt;li>Use Yahoo &lt;a href="http://pipes.yahoo.com/">Pipes&lt;/a> to filter the feed (because Feedrinse seems to be broken).&lt;/li>
&lt;/ul>
&lt;p>This let me create a feed that excluded all my posts containing the &lt;em>fbpost&lt;/em> tag, thus allowing me to avoid yet another postgasm in Facebook when adding new import URL to notes.&lt;/p>
&lt;p>While fiddling with this I came across &lt;a href="http://www.tothepc.com/archives/10-tools-to-combine-mix-blend-multiple-rss-feeds/">this article&lt;/a> that discusses a number of tools (some no longer available) for processing RSS feeds.&lt;/p></content></item><item><title>Retrieving Blogger posts by post id</title><link>https://blog.oddbit.com/posts/retrieving-blogger-posts-by-po/</link><pubDate>Fri, 29 Jan 2010 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/posts/retrieving-blogger-posts-by-po/</guid><description>I spent some time recently trying to figure out, using Google&amp;rsquo;s gdata API, how to retrieve a post from a Blogger blog if I know corresponding post id. As far as I can tell there is no obvious way of doing this, at least not using the gdata.blogger.client api, but after much nashing of teeth I came up with the following solution.
Given client, a gdata.blogger.client instance, and blog, a gdata.</description><content>&lt;p>I spent some time recently trying to figure out, using Google&amp;rsquo;s &lt;a href="http://code.google.com/apis/gdata/docs/2.0/basics.html">gdata&lt;/a> API, how to retrieve a post from a &lt;a href="http://www.blogger.com/">Blogger&lt;/a> blog if I know corresponding post id. As far as I can tell there is no obvious way of doing this, at least not using the gdata.blogger.client api, but after much nashing of teeth I came up with the following solution.&lt;/p>
&lt;p>Given client, a &lt;a href="http://gdata-python-client.googlecode.com/svn/trunk/pydocs/gdata.blogger.client.html">gdata.blogger.client&lt;/a> instance, and blog, a &lt;a href="http://gdata-python-client.googlecode.com/svn/trunk/pydocs/gdata.blogger.data.html">gdata.blogger.data.Blog&lt;/a> instance, the following code will return a &lt;a href="http://gdata-python-client.googlecode.com/svn/trunk/pydocs/gdata.blogger.data.html">gdata.blogger.data.BlogPost&lt;/a> instance:&lt;/p>
&lt;pre>&lt;code>post = client.get_feed(blog.get_post_link().href
+ '/%s' % post_id,
auth_token=client.auth_token,
desired_class=gdata.blogger.data.BlogPost)
&lt;/code>&lt;/pre>
&lt;p>I&amp;rsquo;m not sure if this is the canonical solution or not, but it appears to work for me.&lt;/p></content></item></channel></rss>