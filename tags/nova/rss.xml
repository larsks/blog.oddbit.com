<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nova on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/nova/</link><description>Recent content in Nova on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/nova/rss.xml" rel="self" type="application/rss+xml"/><item><title>OpenStack Networking without DHCP</title><link>https://blog.oddbit.com/post/2015-06-26-openstack-networking-without-d/</link><pubDate>Fri, 26 Jun 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-06-26-openstack-networking-without-d/</guid><description>&lt;p&gt;In an OpenStack environment, &lt;a href="https://cloudinit.readthedocs.org/en/latest/"&gt;cloud-init&lt;/a&gt; generally fetches
information from the metadata service provided by Nova. It also has
support for reading this information from a &lt;em&gt;configuration drive&lt;/em&gt;,
which under OpenStack means a virtual CD-ROM device attached to your
instance containing the same information that would normally be
available via the metadata service.&lt;/p&gt;
&lt;p&gt;It is possible to generate your network configuration from this
configuration drive, rather than relying on the DHCP server provided
by your OpenStack environment. In order to do this you will need to
make the following changes to your Nova configuration:&lt;/p&gt;</description></item><item><title>Installing nova-docker on Fedora 21/RDO Juno</title><link>https://blog.oddbit.com/post/2015-02-06-installing-nova-docker-on-fedo/</link><pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-02-06-installing-nova-docker-on-fedo/</guid><description>&lt;p&gt;This post comes about indirectly by a request on IRC in &lt;code&gt;#rdo&lt;/code&gt; for help getting &lt;a href="https://github.com/stackforge/nova-docker"&gt;nova-docker&lt;/a&gt; installed on Fedora 21. I ran through the process from start to finish and decided to write everything down for posterity.&lt;/p&gt;
&lt;h2 id="getting-started"&gt;Getting started&lt;/h2&gt;
&lt;p&gt;I started with the &lt;a href="https://getfedora.org/en/cloud/download/"&gt;Fedora 21 Cloud Image&lt;/a&gt;, because I&amp;rsquo;m
installing onto OpenStack and the cloud images include
some features that are useful in this environment.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll be using OpenStack packages from the &lt;a href="https://repos.fedorapeople.org/repos/openstack/openstack-juno/"&gt;RDO Juno&lt;/a&gt; repository.
Because there is often some skew between the RDO packages and the
current Fedora selinux policy, we&amp;rsquo;re going to start by putting SELinux
into permissive mode (sorry, Dan):&lt;/p&gt;</description></item><item><title>Filtering libvirt XML in Nova</title><link>https://blog.oddbit.com/post/2015-02-05-filtering-libvirt-xml-in-nova/</link><pubDate>Thu, 05 Feb 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-02-05-filtering-libvirt-xml-in-nova/</guid><description>&lt;p&gt;I saw a request from a customer float by the other day regarding the
ability to filter the XML used to create Nova instances in libvirt.
The customer effectively wanted to blacklist a variety of devices (and
device types). The consensus seems to be &amp;ldquo;you can&amp;rsquo;t do this right now
and upstream is unlikely to accept patches that implement this
behavior&amp;rdquo;, but it sounded like an interesting problem, so&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/larsks/nova/tree/feature/xmlfilter"&gt;https://github.com/larsks/nova/tree/feature/xmlfilter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a fork of Nova (Juno) that includes support for an extensible
filtering mechanism that is applied to the generated XML before it
gets passed to libvirt.&lt;/p&gt;</description></item><item><title>Accessing the serial console of your Nova servers</title><link>https://blog.oddbit.com/post/2014-12-22-accessing-the-serial-console-o/</link><pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2014-12-22-accessing-the-serial-console-o/</guid><description>&lt;p&gt;One of the new features available in the Juno release of OpenStack is
support for &lt;a href="https://blueprints.launchpad.net/nova/&amp;#43;spec/serial-ports"&gt;serial console access to your Nova
servers&lt;/a&gt;. This post looks into how to configure the
serial console feature and then how to access the serial consoles of
your Nova servers.&lt;/p&gt;
&lt;h2 id="configuring-serial-console-support"&gt;Configuring serial console support&lt;/h2&gt;
&lt;p&gt;In previous release of OpenStack, read-only access to the serial
console of your servers was available through the
&lt;code&gt;os-getConsoleOutput&lt;/code&gt; server action (exposed via &lt;code&gt;nova console-log&lt;/code&gt; on
the command line). Most cloud-specific Linux images are configured
with a command line that includes something like &lt;code&gt;console=tty0 console=ttyS0,115200n81&lt;/code&gt;, which ensures that kernel output and other
messages are available on the serial console. This is a useful
mechanism for diagnosing problems in the event that you do not have
network access to a server.&lt;/p&gt;</description></item><item><title>Integrating custom code with Nova using hooks</title><link>https://blog.oddbit.com/post/2014-09-27-integrating-custom-code-with-n/</link><pubDate>Sat, 27 Sep 2014 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2014-09-27-integrating-custom-code-with-n/</guid><description>&lt;p&gt;Would you like to run some custom Python code when Nova creates and
destroys virtual instances on your compute hosts? This is possible
using Nova&amp;rsquo;s support for &lt;a href="http://docs.openstack.org/developer/nova/devref/hooks.html"&gt;hooks&lt;/a&gt;, but the existing documentation is
somewhat short on examples, so I&amp;rsquo;ve spent some time trying to get
things working.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/larsks/demo_nova_hooks"&gt;demo_nova_hooks&lt;/a&gt; repository contains a working example of the
techniques discussed in this article.&lt;/p&gt;
&lt;h2 id="whats-a-hook"&gt;What&amp;rsquo;s a hook?&lt;/h2&gt;
&lt;p&gt;A Nova &amp;ldquo;hook&amp;rdquo; is a mechanism that allows you to attach a class of your
own design to a particular function or method call in Nova. Your
class should define a &lt;code&gt;pre&lt;/code&gt; method (that will be called before the
method is called) and &lt;code&gt;post&lt;/code&gt; function (that will be called after the
method is called):&lt;/p&gt;</description></item></channel></rss>