<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logging on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/logging/</link><description>Recent content in Logging on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/logging/rss.xml" rel="self" type="application/rss+xml"/><item><title>OpenStack, Containers, and Logging</title><link>https://blog.oddbit.com/post/2017-06-14-openstack-containers-and-loggi/</link><pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2017-06-14-openstack-containers-and-loggi/</guid><description>&lt;p&gt;I&amp;rsquo;ve been thinking about logging in the context of OpenStack and containerized service deployments. I&amp;rsquo;d like to lay out some of my thoughts on this topic and see if people think I am talking crazy or not.&lt;/p&gt;
&lt;p&gt;There are effectively three different mechanisms that an application can use to emit log messages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Via some logging-specific API, such as the legacy syslog API&lt;/li&gt;
&lt;li&gt;By writing a byte stream to stdout/stderr&lt;/li&gt;
&lt;li&gt;By writing a byte stream to a file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A substantial advantage to the first mechanism (using a logging API) is that the application is logging &lt;em&gt;messages&lt;/em&gt; rather than &lt;em&gt;bytes&lt;/em&gt;. This means that if you log a message containing embedded newlines (e.g., python or java tracebacks), you can collect that as a single message rather than having to impose some sort of structure on the byte stream after the fact in order to reconstruct those message.&lt;/p&gt;</description></item><item><title>Apache virtual host statistics</title><link>https://blog.oddbit.com/post/2010-02-19-apache-virtual-host-statistics/</link><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2010-02-19-apache-virtual-host-statistics/</guid><description>&lt;p&gt;As part of a project I&amp;rsquo;m working on I wanted to get a rough idea of the activity of the Apache virtual hosts on the system. I wasn&amp;rsquo;t able to find exactly what I wanted, so I refreshed my memory of curses to bring you &lt;em&gt;vhoststats&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This tools reads an Apache log file (with support for arbitrary formats) and generates a dynamic bar chart showing the activity (in number of requests and bytes transferred) of hosts on the system. The output might look something like this (but with colors):&lt;/p&gt;</description></item></channel></rss>