<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devstack on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/devstack/</link><description>Recent content in devstack on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Wed, 11 Feb 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/devstack/rss.xml" rel="self" type="application/rss+xml"/><item><title>Installing nova-docker with devstack</title><link>https://blog.oddbit.com/post/2015-02-11-installing-novadocker-with-dev/</link><pubDate>Wed, 11 Feb 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-02-11-installing-novadocker-with-dev/</guid><description>This is a long-form response to this question, and describes how to get the nova-docker driver up running with devstack under Ubuntu 14.04 (Trusty). I wrote a similar post for Fedora 21, although that one was using the RDO Juno packages, while this one is using devstack and the upstream sources.
Getting started We&amp;rsquo;ll be using the Ubuntu 14.04 cloud image (because my test environment runs on OpenStack).
First, let&amp;rsquo;s install a few prerequisites:</description><content>&lt;p>This is a long-form response to &lt;a href="https://ask.openstack.org/en/question/60679/installing-docker-on-openstack-with-ubuntu/">this question&lt;/a>, and describes
how to get the &lt;a href="http://github.com/stackforge/nova-docker/">nova-docker&lt;/a> driver up running with &lt;a href="http://devstack.org/">devstack&lt;/a>
under Ubuntu 14.04 (Trusty). I wrote a &lt;a href="https://blog.oddbit.com/post/2015-02-06-installing-nova-docker-on-fedo/">similar post&lt;/a> for Fedora
21, although that one was using the &lt;a href="http://openstack.redhat.com/">RDO&lt;/a> Juno packages, while this
one is using &lt;a href="http://devstack.org/">devstack&lt;/a> and the upstream sources.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>We&amp;rsquo;ll be using the &lt;a href="https://cloud-images.ubuntu.com/trusty/current/">Ubuntu 14.04 cloud image&lt;/a> (because my test
environment runs on &lt;a href="http://www.openstack.org/">OpenStack&lt;/a>).&lt;/p>
&lt;p>First, let&amp;rsquo;s install a few prerequisites:&lt;/p>
&lt;pre>&lt;code>$ sudo apt-get update
$ sudo apt-get -y install git git-review python-pip python-dev
&lt;/code>&lt;/pre>
&lt;p>And generally make sure things are up-to-date:&lt;/p>
&lt;pre>&lt;code>$ sudo apt-get -y upgrade
&lt;/code>&lt;/pre>
&lt;h2 id="installing-docker">Installing Docker&lt;/h2>
&lt;p>We need to install Docker if we&amp;rsquo;re going to use &lt;code>nova-docker&lt;/code>.&lt;/p>
&lt;p>Ubuntu 14.04 includes a fairly dated version of Docker, so I followed
&lt;a href="https://docs.docker.com/installation/ubuntulinux/#docker-maintained-package-installation">the instructions&lt;/a> on the Docker website for installing the current
version of Docker on Ubuntu; this ultimately got me:&lt;/p>
&lt;pre>&lt;code>$ sudo apt-get -y install lxc-docker
$ sudo docker version
Client version: 1.5.0
Client API version: 1.17
Go version (client): go1.4.1
Git commit (client): a8a31ef
OS/Arch (client): linux/amd64
Server version: 1.5.0
Server API version: 1.17
Go version (server): go1.4.1
Git commit (server): a8a31ef
&lt;/code>&lt;/pre>
&lt;p>Docker by default creates its socket (&lt;code>/var/run/docker.socket&lt;/code>) with
&lt;code>root:root&lt;/code> ownership. We&amp;rsquo;re going to be running devstack as the
&lt;code>ubuntu&lt;/code> user, so let&amp;rsquo;s change that by editing &lt;code>/etc/default/docker&lt;/code>
and setting:&lt;/p>
&lt;pre>&lt;code>DOCKER_OPTS='-G ubuntu'
&lt;/code>&lt;/pre>
&lt;p>And restart &lt;code>docker&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ sudo restart docker
&lt;/code>&lt;/pre>
&lt;p>And verify that we can access Docker as the &lt;code>ubuntu&lt;/code> user:&lt;/p>
&lt;pre>&lt;code>$ docker version
Client version: 1.5.0
Client API version: 1.17
[...]
&lt;/code>&lt;/pre>
&lt;h2 id="installing-nova-docker">Installing nova-docker&lt;/h2>
&lt;p>As the &lt;code>ubuntu&lt;/code> user, let&amp;rsquo;s get the &lt;code>nova-docker&lt;/code> source code:&lt;/p>
&lt;pre>&lt;code>$ git clone http://github.com/stackforge/nova-docker.git
$ cd nova-docker
&lt;/code>&lt;/pre>
&lt;p>As of this writing (&lt;code>HEAD&lt;/code> is &amp;ldquo;984900a Give some time for docker.stop
to work&amp;rdquo;), you need to apply &lt;a href="https://review.openstack.org/#/c/154750/">a patch&lt;/a> to &lt;code>nova-docker&lt;/code> to get it to
work with the current Nova &lt;code>master&lt;/code> branch:&lt;/p>
&lt;pre>&lt;code>$ git fetch https://review.openstack.org/stackforge/nova-docker \
refs/changes/50/154750/3 \
&amp;amp;&amp;amp; git checkout FETCH_HEAD
&lt;/code>&lt;/pre>
&lt;p>Once &lt;a href="https://review.openstack.org/#/c/154750/">that change&lt;/a> has merged (&lt;strong>update&lt;/strong>, 2015-02-12: the
patch has merged), this step should no longer be
necessary. With the patch we applied, we can install the
&lt;code>nova-docker&lt;/code> driver:&lt;/p>
&lt;pre>&lt;code>$ sudo pip install .
&lt;/code>&lt;/pre>
&lt;h2 id="configuring-devstack">Configuring devstack&lt;/h2>
&lt;p>Now we&amp;rsquo;re ready to get devstack up and running. Start by cloning the
repository:&lt;/p>
&lt;pre>&lt;code>$ git clone https://git.openstack.org/openstack-dev/devstack
$ cd devstack
&lt;/code>&lt;/pre>
&lt;p>Then create a &lt;code>local.conf&lt;/code> file with the following content:&lt;/p>
&lt;pre>&lt;code>[[local|localrc]]
ADMIN_PASSWORD=secret
DATABASE_PASSWORD=$ADMIN_PASSWORD
RABBIT_PASSWORD=$ADMIN_PASSWORD
SERVICE_PASSWORD=$ADMIN_PASSWORD
SERVICE_TOKEN=super-secret-admin-token
VIRT_DRIVER=novadocker.virt.docker.DockerDriver
DEST=$HOME/stack
SERVICE_DIR=$DEST/status
DATA_DIR=$DEST/data
LOGFILE=$DEST/logs/stack.sh.log
LOGDIR=$DEST/logs
# The default fixed range (10.0.0.0/24) conflicted with an address
# range I was using locally.
FIXED_RANGE=10.254.1.0/24
NETWORK_GATEWAY=10.254.1.1
# This enables Neutron, because that's how I roll.
disable_service n-net
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service q-meta
# I am disabling horizon (because I rarely use the web ui)
# and tempest in order to make the installer complete a
# little faster.
disable_service horizon
disable_service tempest
# Introduce glance to docker images
[[post-config|$GLANCE_API_CONF]]
[DEFAULT]
container_formats=ami,ari,aki,bare,ovf,ova,docker
# Configure nova to use the nova-docker driver
[[post-config|$NOVA_CONF]]
[DEFAULT]
compute_driver=novadocker.virt.docker.DockerDriver
&lt;/code>&lt;/pre>
&lt;p>This will result in things getting installed in subdirectories of
&lt;code>$HOME/stack&lt;/code>. We enable Neutron and leave pretty much everything
else set to default values.&lt;/p>
&lt;h2 id="start-the-installation">Start the installation&lt;/h2>
&lt;p>So, now we&amp;rsquo;re all ready to roll!&lt;/p>
&lt;pre>&lt;code>$ ./stack.sh
[Call Trace]
./stack.sh:151:source
/home/ubuntu/devstack/stackrc:665:die
[ERROR] /home/ubuntu/devstack/stackrc:665 Could not determine host ip address. See local.conf for suggestions on setting HOST_IP.
/home/ubuntu/devstack/functions-common: line 322: /home/ubuntu/stack/logs/error.log: No such file or directory
&lt;/code>&lt;/pre>
&lt;p>&amp;hellip;or not. This error happens if devstack is unable to turn your
hostname into an IP address. We can set &lt;code>HOST_IP&lt;/code> in our
environment:&lt;/p>
&lt;pre>&lt;code>$ HOST_IP=10.0.0.232 ./stack.sh
&lt;/code>&lt;/pre>
&lt;p>And then go grab a cup of coffee or something.&lt;/p>
&lt;h2 id="install-nova-docker-rootwrap-filters">Install nova-docker rootwrap filters&lt;/h2>
&lt;p>Once &lt;code>stack.sh&lt;/code> is finished running, we need to install a &lt;code>rootwrap&lt;/code>
configuration file for &lt;code>nova-docker&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ sudo cp nova-docker/etc/nova/rootwrap.d/docker.filters \
/etc/nova/rootwrap.d/
&lt;/code>&lt;/pre>
&lt;h2 id="starting-a-docker-container">Starting a Docker container&lt;/h2>
&lt;p>Now that our environment is up and running, we should be able to start
a container. We&amp;rsquo;ll start by grabbing some admin credentials for our
OpenStack environment:&lt;/p>
&lt;pre>&lt;code>$ . openrc admin
&lt;/code>&lt;/pre>
&lt;p>Next, we need an appropriate image; my &lt;a href="https://registry.hub.docker.com/u/larsks/thttpd/">larsks/thttpd&lt;/a> image
is small (so it&amp;rsquo;s quick to download) and does not require any
interactive terminal (so it&amp;rsquo;s appropriate for nova-docker), so let&amp;rsquo;s
start with that:&lt;/p>
&lt;pre>&lt;code>$ docker pull larsks/thttpd
$ docker save larsks/thttpd |
glance image-create --name larsks/thttpd \
--is-public true --container-format docker \
--disk-format raw
&lt;/code>&lt;/pre>
&lt;p>And now we&amp;rsquo;ll boot it up. I like to do this as a non-admin user:&lt;/p>
&lt;pre>&lt;code>$ . openrc demo
$ nova boot --image larsks/thttpd --flavor m1.small test0
&lt;/code>&lt;/pre>
&lt;p>After a bit, we should see:&lt;/p>
&lt;pre>&lt;code>$ nova list
+----...+-------+--------+...+-------------+--------------------+
| ID ...| Name | Status |...| Power State | Networks |
+----...+-------+--------+...+-------------+--------------------+
| 0c3...| test0 | ACTIVE |...| Running | private=10.254.1.4 |
+----...+-------+--------+...+-------------+--------------------+
&lt;/code>&lt;/pre>
&lt;p>Let&amp;rsquo;s create a floating ip address:&lt;/p>
&lt;pre>&lt;code>$ nova floating-ip-create
+------------+-----------+----------+--------+
| Ip | Server Id | Fixed Ip | Pool |
+------------+-----------+----------+--------+
| 172.24.4.3 | - | - | public |
+------------+-----------+----------+--------+
&lt;/code>&lt;/pre>
&lt;p>And assign it to our container:&lt;/p>
&lt;pre>&lt;code>$ nova floating-ip-associate test0 172.24.4.3
&lt;/code>&lt;/pre>
&lt;p>And now access our service:&lt;/p>
&lt;pre>&lt;code>$ curl http://172.24.4.3
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Your web server is working&amp;lt;/title&amp;gt;
[...]
&lt;/code>&lt;/pre></content></item></channel></rss>