<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hack on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/hack/</link><description>Recent content in hack on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Fri, 10 Apr 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/hack/rss.xml" rel="self" type="application/rss+xml"/><item><title>Using tools badly: time shifting git commits with Workinghours</title><link>https://blog.oddbit.com/post/2015-04-10-workinghours-time-shifting-git/</link><pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2015-04-10-workinghours-time-shifting-git/</guid><description>This is a terrible hack. If you are easily offended by bad ideas implemented poorly, move along!
You are working on a wonderful open source project&amp;hellip;but you are not supposed to be working on that project! You&amp;rsquo;re supposed to be doing your real work! Unfortunately, your extra-curricular activity is well documented in the git history of your project for all to see:
And now your boss knows why the TPS reports are late.</description><content>&lt;p>This is a terrible hack. If you are easily offended by bad ideas
implemented poorly, move along!&lt;/p>
&lt;p>You are working on a wonderful open source project&amp;hellip;but you are not
&lt;em>supposed&lt;/em> to be working on that project! You&amp;rsquo;re supposed to be doing
your &lt;em>real&lt;/em> work! Unfortunately, your extra-curricular activity is
well documented in the git history of your project for all to see:&lt;/p>
&lt;p>&lt;img src="repo-before.png" alt="Heatmap of original commit history">&lt;/p>
&lt;p>And now your boss knows why the TPS reports are late. You need
&lt;a href="https://github.com/larsks/workinghours.git">workinghours&lt;/a>, a terrible utility for doing awful things to your
repository history. &lt;a href="https://github.com/larsks/workinghours.git">Workinghours&lt;/a> will programatically time shift
your git commits so that they appear to have happened within specified
time intervals (for example, &amp;ldquo;between 7PM and midnight&amp;rdquo;).&lt;/p>
&lt;p>Running &lt;code>workinghours&lt;/code> on your repository makes things better:&lt;/p>
&lt;pre>&lt;code>workinghours --afterhours | workinghours-apply
&lt;/code>&lt;/pre>
&lt;p>And now you have:&lt;/p>
&lt;p>&lt;img src="repo-after.png" alt="Heatmap of modified commit history">&lt;/p>
&lt;p>But that looks suspicious. What are you, some kind of machine?
Fortunately, &lt;code>workinghours&lt;/code> has a &lt;code>--drift&lt;/code> option that will introduce
some variety into your start and end times. The syntax is &lt;code>--drift P before after&lt;/code>, where for each commit &lt;code>workinghours&lt;/code> will with
probability &lt;em>P&lt;/em> extend the beginning of the time interval by a random
amount between 0 and &lt;em>before&lt;/em>
hours, and the end of the time interval by a random amount between 0
and &lt;em>after&lt;/em> hours.&lt;/p>
&lt;p>Introducing a low probability drift to the beginning of the interval:&lt;/p>
&lt;pre>&lt;code>workinghours --afterhours -d 0.2 8 2 | workinghours-apply
&lt;/code>&lt;/pre>
&lt;p>Gives us:&lt;/p>
&lt;p>&lt;img src="repo-drifted.png" alt="Heatmap of modified commit history">&lt;/p>
&lt;p>Congratulations, you are a model employee.&lt;/p></content></item></channel></rss>