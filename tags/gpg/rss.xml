<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gpg on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/gpg/</link><description>Recent content in Gpg on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/gpg/rss.xml" rel="self" type="application/rss+xml"/><item><title>Using KeyOxide</title><link>https://blog.oddbit.com/post/2022-11-13-using-keyoxide/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2022-11-13-using-keyoxide/</guid><description>&lt;p&gt;In today&amp;rsquo;s post, we look at &lt;a href="https://keyoxide.org/"&gt;KeyOxide&lt;/a&gt;, a service that allows you to cryptographically assert ownership of online resources using your GPG key. Some aspects of the service are less than obvious; in response to some questions I saw on Mastodon I though I would put together a short guide to making use of the service.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re going to look at the following high-level tasks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2022-11-13-using-keyoxide/#step-1-create-a-gpg-keypair"&gt;Create a GPG key&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.oddbit.com/post/2022-11-13-using-keyoxide/#step-2-publish-your-key"&gt;Publish the GPG key&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Getting started with KSOPS</title><link>https://blog.oddbit.com/post/2021-03-09-getting-started-with-ksops/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2021-03-09-getting-started-with-ksops/</guid><description>&lt;p&gt;&lt;a href="https://kustomize.io/"&gt;Kustomize&lt;/a&gt; is a tool for assembling Kubernetes manifests from a
collection of files. We&amp;rsquo;re making extensive use of Kustomize in the
&lt;a href="https://www.operate-first.cloud/"&gt;operate-first&lt;/a&gt; project. In order to keep secrets stored in our
configuration repositories, we&amp;rsquo;re using the &lt;a href="https://github.com/viaduct-ai/kustomize-sops"&gt;KSOPS&lt;/a&gt; plugin, which
enables Kustomize to use &lt;a href="https://github.com/mozilla/sops"&gt;sops&lt;/a&gt; to encrypt/files using GPG.&lt;/p&gt;
&lt;p&gt;In this post, I&amp;rsquo;d like to walk through the steps necessary to get
everything up and running.&lt;/p&gt;
&lt;h2 id="set-up-gpg"&gt;Set up GPG&lt;/h2&gt;
&lt;p&gt;We encrypt files using GPG, so the first step is making sure that you
have a GPG keypair and that your public key is published where other
people can find it.&lt;/p&gt;</description></item><item><title>A note about running gpgv</title><link>https://blog.oddbit.com/post/2020-10-05-a-note-about-running-gpgv/</link><pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2020-10-05-a-note-about-running-gpgv/</guid><description>&lt;p&gt;I found the following error from &lt;code&gt;gpgv&lt;/code&gt; to be a little opaque:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;gpgv: unknown type of key resource &amp;#39;trustedkeys.kbx&amp;#39;
gpgv: keyblock resource &amp;#39;/home/lars/.gnupg/trustedkeys.kbx&amp;#39;: General error
gpgv: Can&amp;#39;t check signature: No public key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It turns out that&amp;rsquo;s gpg-speak for &amp;ldquo;your &lt;code&gt;trustedkeys.kbx&lt;/code&gt; keyring doesn&amp;rsquo;t
exist&amp;rdquo;. That took longer to figure out than I care to admit. To get a key
from your regular public keyring into your trusted keyring, you can run
something like the following:&lt;/p&gt;</description></item></channel></rss>