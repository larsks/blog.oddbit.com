<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>meta on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/meta/</link><description>Recent content in meta on blog.oddbit.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Tue, 06 Nov 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/meta/rss.xml" rel="self" type="application/rss+xml"/><item><title>Converting HTML to Markdown</title><link>https://blog.oddbit.com/post/2012-11-06-convert-html-to-markdown/</link><pubDate>Tue, 06 Nov 2012 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2012-11-06-convert-html-to-markdown/</guid><description>In order to import posts from Blogger into Scriptogr.am I needed to convert all the HTML formatting into Markdown. Thankfully there are a number of tools out there that can help with this task.
MarkdownRules. This is an online service build around Markdownify. It&amp;rsquo;s a slick site with a nice API, but the backend wasn&amp;rsquo;t able to correctly render &amp;lt;pre&amp;gt; blocks. Since I&amp;rsquo;m often writing about code, my posts are filled with things like embedded XML and #include &amp;lt;stdio.</description><content>&lt;p>In order to import posts from &lt;a href="http://blogger.com/">Blogger&lt;/a> into &lt;a href="http://scriptogr.am/">Scriptogr.am&lt;/a> I needed to convert all the HTML formatting into Markdown. Thankfully there are a number of tools out there that can help with this task.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://markdownrules.com/">MarkdownRules&lt;/a>. This is an online service build around
&lt;a href="http://milianw.de/projects/markdownify/">Markdownify&lt;/a>. It&amp;rsquo;s a slick site with a nice API, but the backend
wasn&amp;rsquo;t able to correctly render &lt;code>&amp;lt;pre&amp;gt;&lt;/code> blocks. Since I&amp;rsquo;m often
writing about code, my posts are filled with things like embedded
XML and &lt;code>#include &amp;lt;stdio.h&amp;gt;&lt;/code>, so this was a problem.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://johnmacfarlane.net/pandoc/">Pandoc&lt;/a>. This is a general purpose tool that can convert between
a variety of markup formats. Unfortunately, it &lt;em>also&lt;/em> had similar
problems with &lt;code>&amp;lt;pre&amp;gt;&lt;/code> blocks.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/aaronsw/html2text">html2text&lt;/a>. This a Python tool that converts HTML to Markdown.
It seems to do a better job at handling the &lt;code>&amp;lt;pre&amp;gt;&lt;/code> blocks, although
it doesn&amp;rsquo;t always get the indent level correct when the &lt;code>&amp;lt;pre&amp;gt;&lt;/code>
blocks are embedded in lists.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I ultimately ended up using &lt;a href="https://github.com/aaronsw/html2text">html2text&lt;/a>, combined with a &lt;a href="https://gist.github.com/4022537">simple
script&lt;/a> to read the &lt;a href="http://www.dataliberation.org/takeout-products/blogger">export from Blogger&lt;/a> and feed each document to
the converter.&lt;/p></content></item><item><title>Relocating from Blogger</title><link>https://blog.oddbit.com/post/2012-11-06-moving-from-blogger/</link><pubDate>Tue, 06 Nov 2012 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2012-11-06-moving-from-blogger/</guid><description>I&amp;rsquo;m in the process of porting over content from Blogger. This may lead to odd formatting or broken links here and there. If you spot something, please let me know.
If you came here from Google and found a broken link, try starting at the archive and see if you can spot what you were looking for.</description><content>&lt;p>I&amp;rsquo;m in the process of porting over content from Blogger. This may
lead to odd formatting or broken links here and there. If you spot
something, please &lt;a href="http://blog.oddbit.com/about">let me know&lt;/a>.&lt;/p>
&lt;p>If you came here from Google and found a broken link, try starting at
the &lt;a href="http://blog.oddbit.com/archive">archive&lt;/a> and see if you can spot what you were looking for.&lt;/p></content></item><item><title>Merging directories with OpenLDAP's Meta backend</title><link>https://blog.oddbit.com/post/2010-02-16-merging-directories-with-openl/</link><pubDate>Tue, 16 Feb 2010 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2010-02-16-merging-directories-with-openl/</guid><description>This document provides an example of using OpenLDAP&amp;rsquo;s meta backend to provide a unified view of two distinct LDAP directory trees. I was frustrated by the lack of simple examples available when I went looking for information on this topic, so this is my attempt to make life easier for the next person looking to do the same thing.
The particular use case that motiviated my interest in this topic was the need to configure web applications to (a) authenticate against an existing Active Directory server while (b) also allowing new accounts to be provisioned quickly and without granting any access in the AD environment.</description><content>&lt;p>This document provides an example of using OpenLDAP&amp;rsquo;s meta backend to provide a unified view of two distinct LDAP directory trees. I was frustrated by the lack of simple examples available when I went looking for information on this topic, so this is my attempt to make life easier for the next person looking to do the same thing.&lt;/p>
&lt;p>The particular use case that motiviated my interest in this topic was the need to configure web applications to (a) authenticate against an existing Active Directory server while (b) also allowing new accounts to be provisioned quickly and without granting any access in the AD environment. A complicating factor is that the group managing the AD server(s) was not the group implementing the web applications.&lt;/p>
&lt;h1 id="assumptions">Assumptions&lt;/h1>
&lt;p>I&amp;rsquo;m making several assumptions while writing this document:&lt;/p>
&lt;ul>
&lt;li>You have root access on your system and are able to modify files in /etc/openldap and elsewhere on the filesystem.&lt;/li>
&lt;li>You are somewhat familiar with LDAP.&lt;/li>
&lt;li>You are somewhat familiar with OpenLDAP.&lt;/li>
&lt;/ul>
&lt;h1 id="set-up-backend-directories">Set up backend directories&lt;/h1>
&lt;h2 id="configure-slapd">Configure slapd&lt;/h2>
&lt;p>We&amp;rsquo;ll first create two &amp;ldquo;backend&amp;rdquo; LDAP directories. These will represent the directories you&amp;rsquo;re trying to merge. For the purposes of this example we&amp;rsquo;ll use the ldif backend, which stores data in LDIF format on the filesystem. This is great for testing (it&amp;rsquo;s simple and easy to understand), but not so great for performance.&lt;/p>
&lt;p>We define one backend like this in /etc/openldap/slapd-be-1.conf:&lt;/p>
&lt;pre>&lt;code>database ldif
suffix &amp;quot;ou=backend1&amp;quot;
directory &amp;quot;/var/lib/ldap/backend1&amp;quot;
rootdn &amp;quot;cn=ldif-admin,ou=backend1&amp;quot;
rootpw &amp;quot;LDIF&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>And a second backend like this in /etc/openldap/slapd-be-2.conf:&lt;/p>
&lt;pre>&lt;code>database ldif
suffix &amp;quot;ou=backend2&amp;quot;
directory &amp;quot;/var/lib/ldap/backend2&amp;quot;
rootdn &amp;quot;cn=ldif-admin,ou=backend2&amp;quot;
rootpw &amp;quot;LDIF&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>Now, we need to load these configs into the main slapd configuration file. Open slapd.conf, and look for the following comment:&lt;/p>
&lt;pre>&lt;code>#######################################################################
# ldbm and/or bdb database definitions
#######################################################################
&lt;/code>&lt;/pre>
&lt;p>Remove anything below this comment and then add the following lines:&lt;/p>
&lt;pre>&lt;code>include /etc/openldap/slapd-be-1.conf
include /etc/openldap/slapd-be-2.conf
&lt;/code>&lt;/pre>
&lt;h2 id="start-up-slapd">Start up slapd&lt;/h2>
&lt;p>Start up your LDAP service:&lt;/p>
&lt;pre>&lt;code># slapd -f slapd.conf -h ldap://localhost/
&lt;/code>&lt;/pre>
&lt;p>And check to make sure it&amp;rsquo;s running:&lt;/p>
&lt;pre>&lt;code># ps -fe | grep slapd
root 15087 1 0 22:48 ? 00:00:00 slapd -f slapd.conf -h ldap://localhost/
&lt;/code>&lt;/pre>
&lt;h2 id="populate-backends-with-sample-data">Populate backends with sample data&lt;/h2>
&lt;p>We need to populate the directories with something to query.&lt;/p>
&lt;p>Put this in backend1.ldif:&lt;/p>
&lt;pre>&lt;code>dn: ou=backend1
objectClass: top
objectClass: organizationalUnit
ou: backend1
dn: ou=people,ou=backend1
objectClass: top
objectClass: organizationalUnit
ou: people
dn: cn=user1,ou=people,ou=backend1
objectClass: inetOrgPerson
cn: user1
givenName: user1
sn: Somebodyson
mail: user1@example.com
&lt;/code>&lt;/pre>
&lt;p>And this in backend2.ldif:&lt;/p>
&lt;pre>&lt;code>dn: ou=backend2
objectClass: top
objectClass: organizationalUnit
ou: backend2
dn: ou=people,ou=backend2
objectClass: top
objectClass: organizationalUnit
ou: people
dn: cn=user2,ou=people,ou=backend2
objectClass: inetOrgPerson
cn: user2
givenName: user2
sn: Somebodyson
mail: user2@example.com
&lt;/code>&lt;/pre>
&lt;p>And then load the data into the backends:&lt;/p>
&lt;pre>&lt;code>ldapadd -x -H ldap://localhost -D cn=ldif-admin,ou=backend1 \
-w LDIF -f backend1.ldif
&lt;/code>&lt;/pre>
&lt;p>And:&lt;/p>
&lt;pre>&lt;code>ldapadd -x -H ldap://localhost -D cn=ldif-admin,ou=backend2 \
-w LDIF -f backend2.ldif
&lt;/code>&lt;/pre>
&lt;p>You can verify that the data loaded correctly by issuing a query to the backends. E.g.:&lt;/p>
&lt;pre>&lt;code>ldapsearch -x -H ldap://localhost -b ou=backend1 -LLL
&lt;/code>&lt;/pre>
&lt;p>This should give you something that looks very much like the contents of backend1.ldif. You can do the same thing for backend2.&lt;/p>
&lt;h1 id="set-up-meta-database">Set up meta database&lt;/h1>
&lt;p>We&amp;rsquo;re now going to configure OpenLDAP&amp;rsquo;s meta backend to merge the two directory trees. Complete documentation for the meta backend can be found in the &lt;a href="http://www.openldap.org/software/man.cgi?query=slapd-meta&amp;amp;apropos=0&amp;amp;sektion=0&amp;amp;manpath=OpenLDAP+2.4-Release&amp;amp;format=html">slapd-meta man page&lt;/a>.&lt;/p>
&lt;p>Put the following into a file called slapd-frontend.conf (we&amp;rsquo;ll discuss the details in moment):&lt;/p>
&lt;pre>&lt;code>database meta
suffix &amp;quot;dc=example,dc=com&amp;quot;
uri &amp;quot;ldap://localhost/ou=backend1,dc=example,dc=com&amp;quot;
suffixmassage &amp;quot;ou=backend1,dc=example,dc=com&amp;quot; &amp;quot;ou=backend1&amp;quot;
uri &amp;quot;ldap://localhost/ou=backend2,dc=example,dc=com&amp;quot;
suffixmassage &amp;quot;ou=backend2,dc=example,dc=com&amp;quot; &amp;quot;ou=backend2&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>And then add to slapd.conf:&lt;/p>
&lt;pre>&lt;code>include /etc/openldap/slapd-frontend.conf
&lt;/code>&lt;/pre>
&lt;p>Restart slapd. Let&amp;rsquo;s do a quick search to see exactly what we&amp;rsquo;ve accomplished:&lt;/p>
&lt;pre>&lt;code>$ ldapsearch -x -H 'ldap://localhost/' \
-b dc=example,dc=com objectclass=inetOrgPerson -LLL
dn: cn=user1,ou=people,ou=backend1,dc=example,dc=com
objectClass: inetOrgPerson
cn: user1
givenName: user1
sn: Somebodyson
mail: user1@example.com
dn: cn=user2,ou=people,ou=backend2,dc=example,dc=com
objectClass: inetOrgPerson
cn: user2
givenName: user2
sn: Somebodyson
mail: user2@example.com
&lt;/code>&lt;/pre>
&lt;p>As you can see from the output above, a single query is now returning results from both backends, merged into the dc=example,dc=com hierarchy.&lt;/p>
&lt;h2 id="a-closer-look">A closer look&lt;/h2>
&lt;p>Let&amp;rsquo;s take a closer look at the meta backend configuration.&lt;/p>
&lt;pre>&lt;code>database meta
suffix &amp;quot;dc=example,dc=com&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>The database statement begins a new database definition. The suffix statement identifies the namespace that will be served by this particular database.&lt;/p>
&lt;p>Here is the proxy for backend1 (the entry for backend2 is virtually identical):&lt;/p>
&lt;pre>&lt;code>uri &amp;quot;ldap://localhost/ou=backend1,dc=example,dc=com&amp;quot;
suffixmassage &amp;quot;ou=backend1,dc=example,dc=com&amp;quot; &amp;quot;ou=backend1&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>The uri statement defines the host (and port) serving the target directory tree. The full syntax of the uri statement is described in the &lt;a href="http://www.openldap.org/software/man.cgi?query=slapd-meta&amp;amp;apropos=0&amp;amp;sektion=0&amp;amp;manpath=OpenLDAP+2.4-Release&amp;amp;format=html">slapd-meta man page&lt;/a>; what we have here is a very simple example. The &lt;em>naming context&lt;/em> of the URI must fall within the namespace defined in the suffix statement at the beginning of the database definition.&lt;/p>
&lt;p>The suffixmassage statement performs simple rewriting on distinguished names. It directs &lt;em>slapd&lt;/em> to replace ou=backend1,dc=example,dc=com with ou=backend1 when communicating with the backend directory (and vice-versa).&lt;/p>
&lt;p>You can perform simple rewriting of attribute and object classes with the map statement. For example, if backend1 used a sAMAccountName attribute and our application was expecting a uid attribute, we could add this after the suffixmassage statement:&lt;/p>
&lt;pre>&lt;code>map attribute uid sAMAccountName
&lt;/code>&lt;/pre>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>The sample configuration files, data, and code referenced in this post are available online in &lt;a href="http://github.com/larsks/OpenLDAP-Metadirectory-Example">a github repository&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="http://github.com/larsks/OpenLDAP-Metadirectory-Example">http://github.com/larsks/OpenLDAP-Metadirectory-Example&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>I hope you&amp;rsquo;ve found this post useful, or at least informative. If you have any comments or questions regarding this post, please log them as issues on GitHub. This will make them easier for me to track.&lt;/p></content></item></channel></rss>