<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gpio on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/gpio/</link><description>Recent content in Gpio on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/gpio/rss.xml" rel="self" type="application/rss+xml"/><item><title>gpio-watch: Run scripts in response to GPIO signals</title><link>https://blog.oddbit.com/post/2014-07-26-gpiowatch-run-scripts-in-respo/</link><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2014-07-26-gpiowatch-run-scripts-in-respo/</guid><description>&lt;p&gt;For a small project I&amp;rsquo;m working on I needed to attach a few buttons to
a &lt;a href="http://raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; and have some code execute in response to the
button presses.&lt;/p&gt;
&lt;p&gt;Normally I would reach for &lt;a href="http://python.org/"&gt;Python&lt;/a&gt; for a simple project like this,
but constraints of the project made it necessary to implement
something in C with minimal dependencies. I didn&amp;rsquo;t want to write
something that was tied closely to my project&amp;hellip;&lt;/p&gt;
&lt;figure&gt;&lt;a href="https://xkcd.com/974/"&gt;&lt;img src="http://imgs.xkcd.com/comics/the_general_problem.png"&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;&amp;hellip;so I ended up writing &lt;a href="https://github.com/larsks/gpio-watch"&gt;gpio-watch&lt;/a&gt;, a simple tool for connecting
shell scripts (or any other executable) to GPIO events. There are a
few ways to interact with GPIO on the Raspberry Pi. For the fastest
possible performance, you will need to interact directly with the
underlying hardware using, e.g., something like &lt;a href="http://hertaville.com/2014/07/07/rpimmapgpio/"&gt;direct register
access&lt;/a&gt;. Since I was only responding to button presses I opted
to take advantage of the &lt;a href="https://www.kernel.org/doc/Documentation/gpio/sysfs.txt"&gt;GPIO sysfs interface&lt;/a&gt;, which exposes
the GPIO pins via the filesystem.&lt;/p&gt;</description></item></channel></rss>