<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Secrets on blog.oddbit.com</title><link>https://blog.oddbit.com/tags/secrets/</link><description>Recent content in Secrets on blog.oddbit.com</description><generator>Hugo</generator><language>en</language><copyright>Lars Kellogg-Stedman</copyright><lastBuildDate>Thu, 16 Feb 2023 10:58:10 -0500</lastBuildDate><atom:link href="https://blog.oddbit.com/tags/secrets/rss.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes External Secrets</title><link>https://blog.oddbit.com/post/2021-09-03-kubernetes-external-secrets/</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2021-09-03-kubernetes-external-secrets/</guid><description>&lt;p&gt;At &lt;em&gt;$JOB&lt;/em&gt; we maintain the configuration for our OpenShift clusters in a public git repository. Changes in the git repository are applied automatically using &lt;a href="https://argo-cd.readthedocs.io/en/stable/"&gt;ArgoCD&lt;/a&gt; and &lt;a href="https://kustomize.io/"&gt;Kustomize&lt;/a&gt;. This works great, but the public nature of the repository means we need to find a secure solution for managing secrets (such as passwords and other credentials necessary for authenticating to external services). In particular, we need a solution that permits our public repository to be the source of truth for our cluster configuration, without compromising our credentials.&lt;/p&gt;</description></item><item><title>Docker build learns about secrets and ssh agent forwarding</title><link>https://blog.oddbit.com/post/2019-02-24-docker-build-learns-about-secr/</link><pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.oddbit.com/post/2019-02-24-docker-build-learns-about-secr/</guid><description>&lt;p&gt;A common problem for folks working with Docker is accessing resources which require authentication during the image build step. A particularly common use case is getting access to private git repositories using ssh key-based authentication. Until recently there hasn&amp;rsquo;t been a great solution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can embed secrets in your image, but now you can&amp;rsquo;t share the image with anybody.&lt;/li&gt;
&lt;li&gt;you can use build arguments, but this requires passing in an unenecrypted private key on the &lt;code&gt;docker build&lt;/code&gt; command line, which is suboptimal for a number of reasons&lt;/li&gt;
&lt;li&gt;you can perform all the steps requiring authentication at runtime, but this can needlessly complicate your container startup process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With Docker 18.09, there are some experimental features available that makes this much easier. You can read the official announcement &lt;a href="https://docs.docker.com/develop/develop-images/build_enhancements/"&gt;here&lt;/a&gt;, but I wanted to highlight the support for ssh agent forwarding and private keys.&lt;/p&gt;</description></item></channel></rss>